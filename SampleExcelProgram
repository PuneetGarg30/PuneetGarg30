package excelProjectTestbed;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;

import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

public class sampleProgram {
	

	public static final String SAMPLE_XLSX_FILE_PATH = "sample-xlsx-file.xlsx";
	
	 

    public static void main(String[] args) throws IOException, InvalidFormatException {

    	
        // Creating a Workbook from an Excel file (.xls or .xlsx)
        Workbook workbook = WorkbookFactory.create(new File(SAMPLE_XLSX_FILE_PATH));
        
        System.out.println("Workbook Name: Sample-xlsx-file.xlsx");
        
     // Retrieving the number of sheets in the Workbook
        System.out.println("Workbook has " + workbook.getNumberOfSheets() + " Sheets : ");
        
       
        for (int i=0; i<workbook.getNumberOfSheets(); i++) {
            System.out.println(workbook.getSheetName(i));
      
            
            // Getting the Sheet at index zero
            Sheet sheet = workbook.getSheetAt(0);

            // Create a DataFormatter to format and get each cell's value as String
            DataFormatter dataFormatter = new DataFormatter();
            
            
            // Calculate the number of columns in a row
            int numberOfCells = 0;
            Iterator<Row> rowIteratorcol = sheet.rowIterator();
            int noOfRows = sheet.getPhysicalNumberOfRows();
            System.out.println("Total number of rows are" +""+ noOfRows);
           
            if (rowIteratorcol.hasNext())
            {
                Row headerRow = (Row) rowIteratorcol.next();
                //get the number of cells in the header row
                numberOfCells = headerRow.getPhysicalNumberOfCells();
            }
            System.out.println("Number of cells :"+numberOfCells);
            
            
            // 1. You can obtain a rowIterator and columnIterator and iterate over them
            System.out.println("\n\nIterating over Rows and Columns using Iterator\n");
            Iterator<Row> rowIterator = sheet.rowIterator();
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();

                // Now let's iterate over the columns of the current row
                Iterator<Cell> cellIterator = row.cellIterator();

                while (cellIterator.hasNext()) {
                    Cell cell = cellIterator.next();
                    String cellValue = dataFormatter.formatCellValue(cell);
                    System.out.print(cellValue + "\t");
                }
                System.out.println();
            }
        
        }
}}
